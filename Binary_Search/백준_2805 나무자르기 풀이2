#이진탐색으로 풀기

import sys

n, m = map(int,sys.stdin.readline().split())

trees= list(map(int,sys.stdin.readline().split()))

def binary_search(trees, target, start, end):
    
    while start <= end:
        mid = (start+end)//2
        a=0
        len_trees = 0
        for i in range(n):
            if trees[i]>mid:
                len_trees+=(trees[i]-mid)
            else: a+=1
            
    # 설정한 높이에 따라서 잘린 나무의 길이의 합 = len_trees
            
                    
        if len_trees==target:
            return mid
            
        elif len_trees>target:
            if (len_trees-n+a) < target:
                return mid  
                #target과 정확히 일치하지는 않지만, 조건을 만족하는 최대 높이가 현재 mid인 경우.
            else: start = mid + 1
                #현재 mid보다 더 높은 높이에서 잘라도 조건을 만족할 수 있는 경우.
        else: 
            end = mid - 1
            
    return None
            

print(binary_search(trees, m, 0, max(trees)))

    
    
